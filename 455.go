/*
455. Назначение файлов cookie
Легкий
Темы
Компании
Предположим, вы отличный родитель и хотите подарить своим детям печенье. Но вы должны дать каждому ребенку не более одного печенья.

У каждого ребенка iесть коэффициент жадности g[i], который представляет собой минимальный размер файла cookie, которым ребенок будет довольствоваться; и каждый файл cookie jимеет размер s[j]. Если s[j] >= g[i], мы можем назначить файл cookie jдочернему элементу i, и дочерний элемент iбудет доволен. Ваша цель — максимизировать количество дочерних элементов контента и вывести максимальное количество.

Пример 1:

Ввод: g = [1,2,3], s = [1,1]

	Выход: 1
	Объяснение: У вас трое детей и 2 файла cookie. Факторы жадности 3 детей равны 1, 2, 3.

И даже если у вас есть 2 печенья, поскольку их размер равен 1, вы можете сделать довольным только того ребенка, чей фактор жадности равен 1.
Вам нужно вывести 1.
Пример 2:

Ввод: g = [1,2], s = [1,2,3]

	Выход: 2
	Объяснение: у вас двое детей и 3 файла cookie. Факторы жадности 2 детей равны 1, 2.

У вас есть 3 печенья, и их размеры достаточно велики, чтобы удовлетворить всех детей.
Вам нужно вывести 2.

Ограничения:

1 <= g.length <= 3 * 104
0 <= s.length <= 3 * 104
1 <= g[i], s[j] <= 231 - 1
*/
package main

import (
	"fmt"
	"sort"
)

func findContentChildren(g []int, s []int) int {
	if len(g) == 0 || len(s) == 0 {
		return 0
	}

	sort.Ints(g)
	sort.Ints(s)

	i, j := 0, 0
	for i < len(g) && j < len(s) {
		if s[j] >= g[i] {
			i++
		}
		j++
	}

	return i
}

func main() {
	fmt.Println(findContentChildren([]int{1, 2, 3}, []int{1, 1}))
	fmt.Println(findContentChildren([]int{1, 2}, []int{1, 2, 3}))
	fmt.Println(findContentChildren([]int{1, 2, 3}, []int{1, 2, 3}))
	fmt.Println(findContentChildren([]int{1, 2, 3}, []int{1, 2, 3}))
}
